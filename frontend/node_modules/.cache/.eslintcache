[{"/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/index.js":"1","/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/App.js":"2","/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/reportWebVitals.js":"3","/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/pages/Home/Home.js":"4","/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/pages/SignIn/SignIn.js":"5","/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/pages/SignUp/SignUp.js":"6","/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/pages/MyProfile/MyProfile.js":"7","/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/services/AuthAPI.js":"8","/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/components/NavBar/NavBar.js":"9","/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/services/BackendAPI.js":"10","/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/config.js":"11","/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/services/ProfileAPI.js":"12"},{"size":500,"mtime":1637101523238,"results":"13","hashOfConfig":"14"},{"size":759,"mtime":1642114492935,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1637101523239,"results":"16","hashOfConfig":"14"},{"size":4945,"mtime":1637190626364,"results":"17","hashOfConfig":"14"},{"size":3730,"mtime":1642298651519,"results":"18","hashOfConfig":"14"},{"size":3980,"mtime":1642298624986,"results":"19","hashOfConfig":"14"},{"size":5922,"mtime":1642351399928,"results":"20","hashOfConfig":"14"},{"size":857,"mtime":1642335191291,"results":"21","hashOfConfig":"14"},{"size":1060,"mtime":1642298589662,"results":"22","hashOfConfig":"14"},{"size":559,"mtime":1642290068873,"results":"23","hashOfConfig":"14"},{"size":46,"mtime":1642290101587,"results":"24","hashOfConfig":"14"},{"size":619,"mtime":1642350608108,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1i9g937",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/index.js",[],["57","58"],"/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/App.js",[],"/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/reportWebVitals.js",[],"/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/pages/Home/Home.js",["59"],"import React from 'react';\nimport './Home.css';\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport description_delimeter from \"../../images/desctiption_delimeter.png\";\nimport feed_delimeter from \"../../images/feed_delimeter.png\"\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            texts: [\n                {\n                    text: \"ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ATBOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS ABOBUS\",\n                },\n                {\n                    text: \"I like Barak Obama I like Barak Obama I like Barak Obama I like Barak Obama I like Barak Obama I like Barak Obama I like Barak Obama I like Barak Obama I like Barak Obama I like Barak Obama I like Barak Obama I like Barak Obama I like Barak Obama I like Barak Obama I like Barak Obama I like Barak Obama I like Barak Obama I like Barak Obama\",\n                },\n                {\n                    text: \"Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo!\"\n                },\n            ],\n            title: \"Virtual closet\",\n            feed_header: \"Most popular community posts\",\n            feed_data: [\n                {\n                    header: \"PoggersPoggersPoggersPoggers\",\n                    text: \" Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo!\"\n                },\n                {\n                    header: \"Poggers\",\n                    text: \" Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo!\"\n                },\n                {\n                    header: \"Poggers\",\n                    text: \" Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo! Okaay, let's goo!\"\n                }\n            ]\n        };\n    }\n\n    render() {\n        const title = this.state.title.slice();\n        const texts = this.state.texts.slice();\n        const feed_header = this.state.feed_header.slice()\n        const feed_data = this.state.feed_data.slice()\n        return (\n            <div className=\"home\">\n                <NavBar/>\n                <DescriptionBlock\n                    title={title}\n                    texts={texts}\n                />\n                <Feed\n                    feed_header={feed_header}\n                    feed_data={feed_data}\n                />\n            </div>\n        )\n    }\n}\n\n\nfunction DescriptionBlock(props) {\n    return (\n        <div className=\"description-block\">\n            <div className=\"description-header\">\n                {props.title}\n            </div>\n            <div className=\"description\">\n                <TextBlock text={props.texts[0].text}/>\n                <Delimeter className=\"description-delimeter\"\n                           delimeter={description_delimeter}/>\n\n                <TextBlock text={props.texts[1].text}/>\n                <Delimeter className=\"description-delimeter\"\n                           delimeter={description_delimeter}/>\n\n                <TextBlock text={props.texts[2].text}/>\n            </div>\n\n        </div>\n    );\n}\n\nfunction TextBlock(props) {\n    return (\n        <div className=\"description-text-block\">\n            {props.text}\n        </div>\n    );\n}\n\nfunction Delimeter(props) {\n    return (\n        <img className={props.className}\n             src={props.delimeter}\n        >\n        </img>\n    );\n}\n\nfunction Feed(props) {\n    return (\n        <div className=\"feed\">\n            <div className=\"feed-header\">\n                {props.feed_header}\n            </div>\n            <div className=\"feed-block\">\n                <FeedPost feed_data={props.feed_data[0]}/>\n\n                <Delimeter className=\"feed-delimeter\"\n                           delimeter={feed_delimeter}/>\n                <FeedPost feed_data={props.feed_data[1]}/>\n\n                <Delimeter className=\"feed-delimeter\"\n                           delimeter={feed_delimeter}/>\n\n                <FeedPost feed_data={props.feed_data[2]}/>\n            </div>\n        </div>\n    );\n}\n\nfunction FeedPost(props) {\n    return (\n        <div className=\"feed-post\">\n            <div className=\"feed-post-header\">\n                {props.feed_data.header}\n            </div>\n            <div className=\"feed-post-text\">\n                {props.feed_data.text}\n            </div>\n        </div>\n    )\n}","/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/pages/SignIn/SignIn.js",["60","61","62","63","64"],"import React from \"react\";\nimport login_keys from \"../../images/login_keys-removebg.png\";\nimport google_logo from \"../../images/logo googleg 48dp.png\"\nimport {useForm} from \"react-hook-form\";\nimport './SignIn.css';\nimport {withCookies} from \"react-cookie\";\nimport {useNavigate} from \"react-router\";\nimport AuthAPI from \"../../services/AuthAPI\";\n\nfunction SignIn(props) {\n    return (\n        <div className=\"login\">\n            <div className='login-header'>\n                Virtual closet\n            </div>\n            <img\n                className=\"login-keys\"\n                src={login_keys}\n            >\n            </img>\n            <LoginBlock cookies={props}/>\n        </div>\n    );\n}\n\nfunction LoginBlock(props) {\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: {errors}\n    } = useForm();\n    const navigate = useNavigate()\n\n    function Login() {\n        const email = document.getElementById('email').value;\n        const password = document.getElementById('password').value;\n\n        AuthAPI.Login(email, password).then(data => {\n            if (data.status === 200) {\n                const {cookies} = props.cookies;\n                cookies.set(\"id\", data.data.user.id, { path: \"/\" });\n                cookies.set(\"token\", data.data.token, { path: \"/\" });\n                cookies.set(\"refresh\", data.data.refresh, { path: \"/\" });\n                cookies.set(\"email\", email, {path: \"/\"});\n                navigate(\"/my_profile\");\n            } else if (data.status === 400) {\n                const text = \"Fill all the forms!!!\";\n                console.log(text);\n            }\n        })\n    }\n\n    return (\n        <div className='login-block'>\n            <div className=\"login-block-login\">\n                <div className=\"login-block-login-title\">\n                    Email:\n                </div>\n                <div className='login-block-login-form'>\n                    <input\n                        id='email'\n                        className=\"login-block-login-form-input\"\n                        defaultValue=\"test\"\n                        {...register(\"example\")} />\n                </div>\n            </div>\n            <div className=\"login-block-login\">\n                <div className=\"login-block-login-title\">\n                    Password:\n                </div>\n                <div className='login-block-login-form'>\n                    <input\n                        id='password'\n                        className=\"login-block-login-form-input\"\n                        defaultValue=\"test\"\n                        {...register(\"example\")} />\n                </div>\n            </div>\n            <div className={'login-block-buttons'}>\n                <button className={'login-block-button'}\n                        onClick={Login}\n                >\n                    <div className='login-block-button-text'>\n                        Login\n                    </div>\n                </button>\n\n                <button className={'login-block-button'}\n                        onClick={() => navigate('/sign_up')}\n                >\n                    <div className={'login-block-button-text'}>\n                            Sign up\n                    </div>\n                </button>\n                <button className={'login-block-button'}>\n                    <img\n                        className=\"google-logo\"\n                        src={google_logo}\n                    >\n                    </img>\n                    <div className='login-block-button-text'>\n                        Continue with google\n                    </div>\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default withCookies (SignIn);\n","/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/pages/SignUp/SignUp.js",["65","66","67","68","69","70"],"import React from \"react\";\nimport './SignUp.css'\nimport login_keys from \"../../images/login_keys-removebg.png\";\nimport {useForm} from \"react-hook-form\";\nimport {Link} from \"react-router-dom\";\nimport AuthAPI from \"../../services/AuthAPI\";\nimport {withCookies} from \"react-cookie\";\nimport {useNavigate} from \"react-router\";\n\nfunction SignUp(props) {\n    return (\n        <div className='signup'>\n            <div className=\"signup-header\">\n                Virtual closet\n            </div>\n            <img\n                className=\"login-keys\"\n                src={login_keys}\n            >\n            </img>\n            <SignUpBlock cookies={props}/>\n        </div>\n    )\n}\n\nfunction SignUpBlock(props) {\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: {errors}\n    } = useForm();\n    const navigate = useNavigate();\n    function RegisterUser() {\n        const login = document.getElementById('login').value;\n        const password = document.getElementById('password').value;\n        const password_again = document.getElementById('password_again').value;\n        const email = document.getElementById('email').value;\n\n        AuthAPI.RegisterUser(login, email, password).then(data => {\n            if (data.status === 201) {\n                const {cookies} = props.cookies;\n                cookies.set(\"id\", data.data.user.id, { path: \"/\" });\n                cookies.set(\"token\", data.data.token, { path: \"/\" });\n                cookies.set(\"refresh\", data.data.refresh, { path: \"/\" });\n                cookies.set(\"email\", email, {path: \"/\"});\n                navigate(\"/my_profile\");\n            } else if (data.status === 400) {\n                const text = \"Fill all the forms!!!\";\n                console.log(text);\n            }\n        })\n\n    }\n\n    return (\n        <div className='signup-block'>\n            <div className=\"signup-block-login\">\n                <div className=\"signup-block-login-title\">\n                    Login:\n                </div>\n                <div className='signup-block-login-form'>\n                    <input\n                        id=\"login\"\n                        className=\"signup-block-login-form-input\"\n                        defaultValue=\"test\"\n                        {...register(\"example\")} />\n                </div>\n            </div>\n            <div className=\"signup-block-login\">\n                <div className=\"signup-block-login-title\">\n                    Password:\n                </div>\n                <div className='signup-block-login-form'>\n                    <input\n                        id='password'\n                        className=\"signup-block-login-form-input\"\n                        {...register(\"example\")} />\n                </div>\n            </div>\n            <div className=\"signup-block-login\">\n                <div className=\"signup-block-login-title\">\n                    Repeat password:\n                </div>\n                <div className='signup-block-login-form'>\n                    <input\n                        id='password_again'\n                        className=\"signup-block-login-form-input\"\n                        {...register(\"example\")} />\n                </div>\n            </div>\n            <div className=\"signup-block-login\">\n                <div className=\"signup-block-login-title\">\n                    E-mail:\n                </div>\n                <div className='signup-block-login-form'>\n                    <input\n                        id='email'\n                        className=\"signup-block-login-form-input\"\n                        {...register(\"example\")} />\n                </div>\n            </div>\n            <button className={'signup-block-button'}\n                    onClick={RegisterUser}\n            >\n                <div className={'signup-block-button-text'}>\n                        Sign up\n                </div>\n            </button>\n        </div>\n    );\n}\n\nexport default withCookies (SignUp);","/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/pages/MyProfile/MyProfile.js",["71","72","73"],"/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/services/AuthAPI.js",["74"],"import BackendAPI, {actionTypes} from \"./BackendAPI\";\n\n\nexport default {\n    RegisterUser(login, email, password) {\n        return BackendAPI.performAction(actionTypes.post,\n            '/auth/register/',\n            {\n                username: login,\n                email: email,\n                password: password\n            });\n    },\n\n    Login(email, password) {\n        return BackendAPI.performAction(actionTypes.post,\n            '/auth/login/',\n            {email: email, password: password});\n    },\n\n    GetActiveUser(user_id, access) {\n        return BackendAPI.performAction(actionTypes.get,\n            `/user/${user_id}`, {},\n            {Authorization: `Bearer ${access}`});\n    },\n\n    RefreshUser(refresh) {\n        return BackendAPI.performAction(actionTypes.post,\n            '/auth/refresh/',\n            {refresh: refresh});\n    }\n\n}","/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/components/NavBar/NavBar.js",["75"],"import React from \"react\";\nimport \"./NavBar.css\"\nimport {Link} from \"react-router-dom\";\nimport {useNavigate} from \"react-router\";\n\nexport default function NavBar() {\n    let navigate = useNavigate()\n    return (\n        <nav className=\"navbar\">\n            <div className=\"button-list\">\n                <NavBarButton\n                    name=\"Home\"\n                    onClick={() => navigate('/')}\n                />\n                <NavBarButton name=\"Community\"/>\n                <NavBarButton name=\"My wardrobe\"/>\n                <NavBarButton\n                    name=\"My profile\"\n                    onClick={() => navigate('/my_profile')}/>\n                <NavBarButton\n                    name=\"Sign in\"\n                    onClick={() => navigate('/sign_in')}\n                />\n            </div>\n        </nav>\n    )\n}\n\nfunction NavBarButton(props) {\n    return (\n        <button className='navbar-button'\n                onClick={props.onClick}\n        >\n            {props.name}\n        </button>\n    )\n}\n\n// export default BrowserRouter(NavBar);","/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/services/BackendAPI.js",["76"],"import axios from 'axios';\nimport {baseUrl} from '../config'\n\nexport const actionTypes = {\n    get: 'GET',\n    post: 'POST',\n    put: \"PUT\",\n    patch: 'PATCH',\n    delete: 'DELETE'\n}\n\nconst getApiUrl = (additionalUrl) => baseUrl + '/api' + additionalUrl;\n\nexport default {\n    performAction(action, url, data = {}, headers = {}, withCredentials = false) {\n        return axios({\n            method: action,\n            url: getApiUrl(url),\n            data: data,\n            headers: headers,\n            withCredentials: withCredentials\n        })\n    }\n}\n","/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/config.js",[],"/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/services/ProfileAPI.js",["77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":96,"column":9,"nodeType":"84","endLine":98,"endColumn":10},{"ruleId":"82","severity":1,"message":"83","line":16,"column":13,"nodeType":"84","endLine":19,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":29,"column":9,"nodeType":"87","messageId":"88","endLine":29,"endColumn":21},{"ruleId":"85","severity":1,"message":"89","line":30,"column":9,"nodeType":"87","messageId":"88","endLine":30,"endColumn":14},{"ruleId":"85","severity":1,"message":"90","line":31,"column":21,"nodeType":"87","messageId":"88","endLine":31,"endColumn":27},{"ruleId":"82","severity":1,"message":"83","line":97,"column":21,"nodeType":"84","endLine":100,"endColumn":22},{"ruleId":"85","severity":1,"message":"91","line":5,"column":9,"nodeType":"87","messageId":"88","endLine":5,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":16,"column":13,"nodeType":"84","endLine":19,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":29,"column":9,"nodeType":"87","messageId":"88","endLine":29,"endColumn":21},{"ruleId":"85","severity":1,"message":"89","line":30,"column":9,"nodeType":"87","messageId":"88","endLine":30,"endColumn":14},{"ruleId":"85","severity":1,"message":"90","line":31,"column":21,"nodeType":"87","messageId":"88","endLine":31,"endColumn":27},{"ruleId":"85","severity":1,"message":"92","line":37,"column":15,"nodeType":"87","messageId":"88","endLine":37,"endColumn":29},{"ruleId":"85","severity":1,"message":"93","line":8,"column":9,"nodeType":"87","messageId":"88","endLine":8,"endColumn":16},{"ruleId":"82","severity":1,"message":"83","line":27,"column":9,"nodeType":"84","endLine":29,"endColumn":10},{"ruleId":"82","severity":1,"message":"83","line":129,"column":25,"nodeType":"84","endLine":131,"endColumn":46},{"ruleId":"94","severity":1,"message":"95","line":4,"column":1,"nodeType":"96","endLine":33,"endColumn":2},{"ruleId":"85","severity":1,"message":"91","line":3,"column":9,"nodeType":"87","messageId":"88","endLine":3,"endColumn":13},{"ruleId":"94","severity":1,"message":"95","line":14,"column":1,"nodeType":"96","endLine":24,"endColumn":2},{"ruleId":"94","severity":1,"message":"95","line":3,"column":1,"nodeType":"96","endLine":18,"endColumn":2},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'handleSubmit' is assigned a value but never used.","Identifier","unusedVar","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'Link' is defined but never used.","'password_again' is assigned a value but never used.","'useForm' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]
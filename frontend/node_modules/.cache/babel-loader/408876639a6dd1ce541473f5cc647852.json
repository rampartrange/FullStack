{"ast":null,"code":"import axios from 'axios';\nimport { baseUrl } from '../config';\nexport const actionTypes = {\n  get: 'GET',\n  post: 'POST',\n  put: \"PUT\",\n  patch: 'PATCH',\n  delete: 'DELETE'\n};\n\nconst getApiUrl = additionalUrl => baseUrl + '/api' + additionalUrl;\n\nexport default {\n  performAction(action, url) {\n    let data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let withCredentials = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    return axios({\n      method: action,\n      url: getApiUrl(url),\n      data: data,\n      headers: headers,\n      withCredentials: withCredentials\n    });\n  }\n\n};","map":{"version":3,"sources":["/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/services/BackendAPI.js"],"names":["axios","baseUrl","actionTypes","get","post","put","patch","delete","getApiUrl","additionalUrl","performAction","action","url","data","headers","withCredentials","method"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AAEA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,GAAG,EAAE,KADkB;AAEvBC,EAAAA,IAAI,EAAE,MAFiB;AAGvBC,EAAAA,GAAG,EAAE,KAHkB;AAIvBC,EAAAA,KAAK,EAAE,OAJgB;AAKvBC,EAAAA,MAAM,EAAE;AALe,CAApB;;AAQP,MAAMC,SAAS,GAAIC,aAAD,IAAmBR,OAAO,GAAG,MAAV,GAAmBQ,aAAxD;;AAEA,eAAe;AACXC,EAAAA,aAAa,CAACC,MAAD,EAASC,GAAT,EAAgE;AAAA,QAAlDC,IAAkD,uEAA3C,EAA2C;AAAA,QAAvCC,OAAuC,uEAA7B,EAA6B;AAAA,QAAzBC,eAAyB,uEAAP,KAAO;AACzE,WAAOf,KAAK,CAAC;AACTgB,MAAAA,MAAM,EAAEL,MADC;AAETC,MAAAA,GAAG,EAAEJ,SAAS,CAACI,GAAD,CAFL;AAGTC,MAAAA,IAAI,EAAEA,IAHG;AAITC,MAAAA,OAAO,EAAEA,OAJA;AAKTC,MAAAA,eAAe,EAAEA;AALR,KAAD,CAAZ;AAOH;;AATU,CAAf","sourcesContent":["import axios from 'axios';\nimport {baseUrl} from '../config'\n\nexport const actionTypes = {\n    get: 'GET',\n    post: 'POST',\n    put: \"PUT\",\n    patch: 'PATCH',\n    delete: 'DELETE'\n}\n\nconst getApiUrl = (additionalUrl) => baseUrl + '/api' + additionalUrl;\n\nexport default {\n    performAction(action, url, data = {}, headers = {}, withCredentials = false) {\n        return axios({\n            method: action,\n            url: getApiUrl(url),\n            data: data,\n            headers: headers,\n            withCredentials: withCredentials\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/pages/MyProfile/MyProfile.js\";\nimport React from \"react\";\nimport \"./MyProfile.css\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport line_delimeter from \"../../images/line_delimeter.png\";\nimport add_button from \"../../images/add-button.png\";\nimport AuthAPI from \"../../services/AuthAPI\";\nimport { withCookies } from \"react-cookie\";\nimport { useForm } from \"react-hook-form\";\nimport ProfileAPI from \"../../services/ProfileAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyProfile(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myprofile\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DescriptionBlock, {\n      title: \"My profile\",\n      cookies: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MyProfile;\n\nfunction Delimeter(props) {\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    className: props.className,\n    src: props.delimeter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Delimeter;\n\nfunction DescriptionBlock(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myprofile-description-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myprofile-description-header\",\n      children: [props.title, /*#__PURE__*/_jsxDEV(Delimeter, {\n        className: \"myprofile-description-delimeter\",\n        delimeter: line_delimeter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InfoBlock, {\n      cookies: props.cookies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = DescriptionBlock;\n\nclass InfoBlock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      user_id: null,\n      profile_id: null,\n      access: null,\n      description: \"\"\n    };\n    const {\n      cookies\n    } = this.props.cookies;\n    const refresh = cookies.get(\"refresh\");\n    const id = cookies.get(\"id\");\n    this.setState({\n      user_id: id\n    });\n    console.log(this.state);\n    AuthAPI.RefreshUser(refresh).then(data => {\n      if (data.status === 200) {\n        this.setState({\n          access: data.data.access\n        });\n        AuthAPI.GetActiveUser(id, data.data.access).then(data => {\n          this.setState({\n            username: data.data.username\n          });\n          console.log(this.state);\n        }).then(data => {\n          ProfileAPI.GetUserProfiles(id).then(data => {\n            if (data.status === 200) {\n              if (data.data.length > 0) {\n                console.log(data.data);\n                const description = data.data[0].description;\n                this.setState({\n                  description: description,\n                  profile_id: data.data[0].id,\n                  user_id: id\n                });\n              }\n            }\n          });\n        }).then(data => {\n          console.log(this.state);\n        });\n      } else {\n        this.setState({\n          username: \"nickname\"\n        });\n      }\n    });\n  }\n\n  UpdateProfile() {\n    console.log(this.state);\n    const description = document.getElementById('description').value;\n    console.log(description);\n    ProfileAPI.UpdateProfile(this.state.profile_id, this.state.user_id, description).then(data => {\n      this.setState({\n        description: description\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myprofile-infoblock\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"myprofile-userinfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myprofile-userinfo-title\",\n          children: this.state.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"myprofile-userinfo-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"add-button\",\n            src: add_button\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prescription\",\n            children: \"Add your photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myprofile-description-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description-header-form\",\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description-form-block\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"description\",\n              className: \"description-form-text\",\n              contentEditable: \"true\",\n              onKeyDown: event => {\n                if (event.key === 'Enter') {\n                  document.execCommand('insertLineBreak');\n                  event.preventDefault();\n                }\n              },\n              children: this.state.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'save-button',\n            onClick: () => this.UpdateProfile(),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"myprofile-userposts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c4 = withCookies(MyProfile);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MyProfile\");\n$RefreshReg$(_c2, \"Delimeter\");\n$RefreshReg$(_c3, \"DescriptionBlock\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/Users/rampartrange/MIPT-HW/FullStack/project/frontend/src/pages/MyProfile/MyProfile.js"],"names":["React","NavBar","line_delimeter","add_button","AuthAPI","withCookies","useForm","ProfileAPI","MyProfile","props","Delimeter","className","delimeter","DescriptionBlock","title","cookies","InfoBlock","Component","constructor","state","username","user_id","profile_id","access","description","refresh","get","id","setState","console","log","RefreshUser","then","data","status","GetActiveUser","GetUserProfiles","length","UpdateProfile","document","getElementById","value","render","event","key","execCommand","preventDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./MyProfile.css\"\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport line_delimeter from \"../../images/line_delimeter.png\";\nimport add_button from \"../../images/add-button.png\"\nimport AuthAPI from \"../../services/AuthAPI\";\nimport {withCookies} from \"react-cookie\";\nimport {useForm} from \"react-hook-form\";\nimport ProfileAPI from \"../../services/ProfileAPI\";\n\n\nfunction MyProfile(props) {\n\n    return (\n        <div className=\"myprofile\">\n            <NavBar/>\n            <DescriptionBlock\n                title='My profile'\n                cookies={props}\n            />\n        </div>\n    )\n}\n\nfunction Delimeter(props) {\n    return (\n        <img className={props.className}\n             src={props.delimeter}\n        >\n        </img>\n    );\n}\n\n\nfunction DescriptionBlock(props) {\n    return (\n        <div className=\"myprofile-description-block\">\n            <div className=\"myprofile-description-header\">\n                {props.title}\n                <Delimeter className=\"myprofile-description-delimeter\"\n                           delimeter={line_delimeter}\n                />\n            </div>\n            <InfoBlock cookies={props.cookies}/>\n            {/*<div className=\"description\">*/}\n            {/*    <TextBlock text={props.texts[0].text}/>*/}\n            {/*    <Delimeter className=\"description-delimeter\"*/}\n            {/*               delimeter={description_delimeter}/>*/}\n\n            {/*    <TextBlock text={props.texts[1].text}/>*/}\n            {/*    <Delimeter className=\"description-delimeter\"*/}\n            {/*               delimeter={description_delimeter}/>*/}\n\n            {/*    <TextBlock text={props.texts[2].text}/>*/}\n            {/*</div>*/}\n\n        </div>\n    );\n}\n\nclass InfoBlock extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            user_id: null,\n            profile_id: null,\n            access: null,\n            description: \"\"\n        }\n\n        const {cookies} = this.props.cookies;\n        const refresh = cookies.get(\"refresh\");\n        const id = cookies.get(\"id\");\n        this.setState({user_id: id})\n        console.log(this.state)\n\n        AuthAPI.RefreshUser(refresh).then((data) => {\n            if (data.status === 200) {\n                this.setState({access: data.data.access})\n                AuthAPI.GetActiveUser(id, data.data.access).then((data) => {\n                    this.setState({username: data.data.username});\n                    console.log(this.state)\n                }).then((data) => {\n                    ProfileAPI.GetUserProfiles(id).then((data) => {\n                        if (data.status === 200) {\n                            if (data.data.length > 0) {\n                                console.log(data.data)\n                                const description = data.data[0].description\n                                this.setState({\n                                    description: description,\n                                    profile_id: data.data[0].id,\n                                    user_id: id\n                                })\n                            }\n                        }\n                    })\n                }).then((data) => {\n                    console.log(this.state)\n                })\n            } else {\n                this.setState({username: \"nickname\"})\n            }\n        })\n    }\n    UpdateProfile() {\n        console.log(this.state)\n        const description = document.getElementById('description').value;\n        console.log(description)\n        ProfileAPI.UpdateProfile(this.state.profile_id, this.state.user_id, description).then((data) => {\n            this.setState({description: description})\n        })\n    }\n\n\n    render() {\n        return (\n            <div className=\"myprofile-infoblock\">\n                <div className=\"myprofile-userinfo\">\n                    <div className=\"myprofile-userinfo-title\">\n                        {this.state.username}\n                    </div>\n                    <button className=\"myprofile-userinfo-button\">\n                        <img\n                            className=\"add-button\"\n                            src={add_button}>\n                        </img>\n                        <div className=\"prescription\">\n                            Add your photo\n                        </div>\n                    </button>\n                    <div className=\"myprofile-description-form\">\n                        <div className='description-header-form'>\n                            Description:\n                        </div>\n                        <div className=\"description-form-block\">\n                            <div\n                                id='description'\n                                className=\"description-form-text\"\n                                contentEditable=\"true\"\n                                onKeyDown={(event) => {\n                                    if (event.key === 'Enter') {\n                                        document.execCommand('insertLineBreak')\n                                        event.preventDefault()\n                                    }\n                                }}\n                            >\n                                {this.state.description}\n                            </div>\n                        </div>\n                        <button className={'save-button'}\n                                onClick={() => this.UpdateProfile()}\n                        >\n                            Save\n                        </button>\n                    </div>\n                </div>\n                <div className=\"myprofile-userposts\">\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withCookies(MyProfile);\n"]},"metadata":{},"sourceType":"module"}